version: '3.8'
services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - mynetwork

  mysql:
    image: mysql:8.0
    restart: always
    ports:
      - '3307:3306'
    environment:
      - MYSQL_DATABASE=mysql
      - MYSQL_ROOT_PASSWORD=123456
    volumes:
      - db:/var/lib/mysql
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672'  # AMQP protocol port
      - '15672:15672'  # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - mynetwork

  # nestjs-app:
  #   build: .
  #   container_name: nestjs-app
  #   ports:
  #     - '8081:8080'
  #   environment:
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     MYSQL_HOST: mysql
  #     MYSQL_PORT: 3306
  #     MYSQL_USER: root
  #     MYSQL_PASSWORD: 123456
  #     MYSQL_DB: mysql
  #     RABBITMQ_HOST: rabbitmq
  #     RABBITMQ_PORT: 5672
  #     RABBITMQ_USER: user
  #     RABBITMQ_PASSWORD: password
  #   depends_on:
  #     - redis
  #     - mysql
  #     - rabbitmq
  #   networks:
  #     - mynetwork

volumes:
  db:
  rabbitmq_data:

networks:
  mynetwork:
    driver: bridge
# docker compose -p nestjs-mysql up -d
