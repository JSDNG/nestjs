# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  id: Int!
  roleName: String!
}

type User {
  id: Int!
  username: String!
  email: String!
  password: String!
  imgName: String!
  phone: String
  isActive: Boolean!
  codeId: String!
  codeExpired: Date!
  refreshToken: String!
  roleId: Float!
  createdAt: Date!
  updatedAt: Date!
  role: Role!
}

type UserEdge {
  cursor: String!
  node: User!
}

type LoginResult {
  data: User!
  accessToken: String!
  refreshToken: String!
}

type UploadUrlResponse {
  uploadUrl: String!
}

"""Date custom scalar type"""
scalar Date

"""Upload custom scalar type"""
scalar Uploads

type Query {
  getUsersPagination(filter: Filter!): PaginatedType!
  user(id: Float!): User!
  getCurrentDate: Date!
  search(text: String!): [ResultUnion!]!
  getSomething: String!
  roles: [Role!]!
  role(id: Int!): Role!
  cachedData: String!
}

type PaginatedType {
  edges: [UserEdge!]
  totalCount: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

input Filter {
  offset: Int
  limit: Int
}

union ResultUnion = User | Role

type Mutation {
  uploadFile(file: Upload!): Boolean!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  deleteUser(id: Float!): String!
  createEvent(date: Date!): String!
  createRole(createRoleInput: CreateRoleInput!): Role!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  testcreateRole(name: CreateRoleInput!): Role!
  createTask(createRoleInput: CreateRoleInput!): Role!
  processTask(id: Float!): Role!
  publishLog(level: String!, message: String!): String!
  consumeInfoLogs: String!
  consumeErrorLogs: String!
  register(data: RegisterAuthInput!): User!
  login(data: LoginAuthInput!): LoginResult!
  refreshAccessToken(email: String!): String!
  generateUploadUrl(contentType: String!, id: Int!): UploadUrlResponse!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateUserInput {
  username: String
  email: String
  password: String!
  imgName: String!
  phone: String
  isActive: Boolean!
  codeId: String!
  codeExpired: Date!
  refreshToken: String
  roleId: Float!
}

input UpdateUserInput {
  username: String!
  email: String
  password: String
  imgName: String
  phone: String
  isActive: Boolean
  codeId: String
  codeExpired: Date
  refreshToken: String
  roleId: Float
  id: Float!
}

input CreateRoleInput {
  roleName: String
}

input UpdateRoleInput {
  roleName: String
  id: Int!
}

input RegisterAuthInput {
  username: String
  email: String
  password: String!
  phone: String
}

input LoginAuthInput {
  email: String!
  password: String!
}

type Subscription {
  roleAdded: Role!
}